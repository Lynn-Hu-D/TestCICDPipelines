name: Push to Main Pipeline

global:
  registry: "docker.io"
  image: ubuntu-latest
  workspace: 'BinaryTree/**'
  artifacts: "/artifacts"

stages:
  - name: setup
  - name: build
  - name: test
  - name: doc
  - name: deploy

jobs:
  setup_environment:
    stage: setup
    commands:
      - "echo 'Checking out repository'"
      - "git clone ${CI_REPOSITORY_URL} ."
      - "echo 'Setting up JDK 17'"
      - "export JAVA_HOME=$(docker-java-home -v 17)"
      - "export PATH=$JAVA_HOME/bin:$PATH"
      - "java -version"

  build_project:
    stage: build
    commands:
      - "echo 'Caching Maven dependencies'"
      - "mkdir -p ~/.m2/repository && echo 'Maven cache ready'"
      - "echo 'Building project'"
      - "mvn clean install -B -f ./BinaryTree/pom.xml"
    artifacts:
      destination:
        path: "/artifacts/build-logs"
      upload:
        path:
          - "./BinaryTree/target/*.log"
    needs: setup_environment

  unit_test:
    stage: test
    commands:
      - "echo 'Running unit tests'"
      - "mvn test -f ./BinaryTree/pom.xml"
      - "mkdir -p artifacts/test-results && cp -r ./BinaryTree/target/surefire-reports artifacts/test-results"
    artifacts:
      destination:
        path: "/artifacts/test-results"
      upload:
        path:
          - "./BinaryTree/target/surefire-reports artifacts/*"
    needs: build_project

  checkstyle:
    stage: doc
    commands:
      - "echo 'Running Checkstyle'"
      - "mvn checkstyle:checkstyle -f ./BinaryTree/pom.xml"
      - "mkdir -p artifacts/checkstyle-report && cp ./BinaryTree/target/checkstyle-result.xml artifacts/checkstyle-report"
    artifacts:
      destination:
        path: "/artifacts/checkstyle-report"
      upload:
        path:
          - "./BinaryTree/target/checkstyle-result.xml artifacts/checkstyle-report/*"
    needs: build_project

  javadoc:
    stage: doc
    commands:
      - "echo 'Generating Javadoc'"
      - "mvn javadoc:javadoc -f ./BinaryTree/pom.xml"
      - "mkdir -p artifacts/javadoc && cp -r ./BinaryTree/target/site/javadoc artifacts/javadoc"
    artifacts:
      destination:
        path: "/artifacts/javadoc"
      upload:
        path:
          - "./BinaryTree/target/site/javadoc artifacts/javadoc/*"
    allow_failure: true
    needs: [build_project, checkstyle]

  static-analysis:
    stage: doc
    commands:
      - "echo 'Running static analysis tools'"
      - "mvn pmd:check -f ./BinaryTree/pom.xml"
      - "mvn spotbugs:check -f ./BinaryTree/pom.xml"
      - "mkdir -p artifacts/static-analysis && cp ./BinaryTree/target/spotbugsXml.xml artifacts/static-analysis"
    artifacts:
      destination:
        path: "/artifacts/static-analysis"
      upload:
        path:
          - "./BinaryTree/target/spotbugsXml.xml artifacts/static-analysis/*"
    needs: [build_project, javadoc]

  package:
    stage: deploy
    commands:
      - "echo 'Building and packaging the JAR'"
      - "mvn package -DskipTests -f ./BinaryTree/pom.xml"
      - "mkdir -p artifacts/jar && cp ./BinaryTree/target/*.jar artifacts/jar"
    artifacts:
      destination:
        path: "/artifacts/jar"
      upload:
        path:
          - "./BinaryTree/target/*.jar artifacts/jar"
    needs: [setup_environment, build_project, unit_test, checkstyle, javadoc, static-analysis]
